makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(1)
makeVector(c(1,2))
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(c(1, 2))
cachemean(makeVector(c(1, 2)))
makeVector(c(1,2))
cachemean(makeVector(c(1, 2)))
cachemean(makeVector(c(2,3)))
cachemean(makeVector(c(2,3)))
x
m
data
print(data)
print(m)
a <- makeVector(c(1,2,3))
a
a$set
cachemean(a)
setmean <- function(mean) m <- mean
setmean(1)
m
mean
a <- setmean(1)
a
>solve
?solve
a <- matrix(x(6, 2, 8, 4), nrow = 2, ncol = 2)
a <- matrix(c(6, 2, 8, 4), nrow = 2, ncol = 2)
a
solve(a)
solve(a, matrix(c(1, 0, 0, 1)))
source("cachematrix.R")
m1 <- matrix(c(1/2, -1/4, -1, 3/4), nrow = 2, ncol = 2)
I2 <- matrix(c(1,0,0,1), nrow = 2, ncol = 2)
n1 <- matrix(c(6,2,8,4), nrow = 2, ncol = 2)
m1 %*% n1
n1 %*% m1
solve(m1)
solve(n1)
myMatrix_object <- makeCacheMatrix(m1)
cacheSolve(myMatrix_object)
source("cachematrix.R")
cacheSolve(myMatrix_object)
myMatrix_object <- makeCacheMatrix(m1)
myMatrix_object
cacheSolve(myMatrix_object)
cacheSolve(myMatrix_object)
matrix
View(cacheSolve)
View(makeVector)
View(makeVector)
View(makeCacheMatrix)
solve(n1)
solve(m1)
solve(m1,... =)
solve(m1,... )
source("cachematrix.R")
myMatrix_object <- makeCacheMatrix(m1)
cacheSolve(myMatrix_object)
a <- makeCacheMatrix(matrix(c(-1, -2, 1, 1), 2,2))
cacheSolve(a)
source("cachematrix.R")
a <- makeCacheMatrix(matrix(c(-1, -2, 1, 1), 2,2))
cacheSolve(a)
source("cachematrix.R")
cacheSolve(a)
debug(cacheSolve)
cacheSolve(a)
View(x)
q
source("cachematrix.R")
cacheSolve(a)
?as.matrix
debug()
debug(cacheSolve)
cacheSolve(a)
View(x)
View(x)
View(x)
View(x)
View(myMatrix_object)
View(myMatrix_object[["getMatrix"]])
a$getMatrix()
a$getMatrix
source("cachematrix.R")
myMatrix_object <- makeCacheMatrix(m1)
cacheSolve(myMatrix_object)
cacheSolve(myMatrix_object)
source("cachematrix.R")
n2 <- matrix(c(5/8, -1/8, -7/8, 3/8), nrow = 2, ncol = 2)
myMatrix_object$set(n2)
cacheSolve(myMatrix_object)
n2 <- matrix(c(5/8, -1/8, -7/8, 3/8), nrow = 2, ncol = 2)
myMatrix_object <- makeCacheMatrix(m1)
myMatrix_object$setMatrix(n2)
cacheSolve(myMatrix_object)
a <- makeCacheMatrix(matrix(c(-1, -2, 1, 1), 2,2))
cacheSolve(a)
cacheSolve(a)
a$get() %*% a$getsolve()
a$get() %*% a$getInverse()
a$getMatrix() %*% a$getInverse()
a$set(matrix(c(2,3,2,2),2,2))
a$setMatrix(matrix(c(2,3,2,2),2,2))
a$getMatrix()
a$getInverse()
cacheSolve(a)
cacheSolve(makeCacheMatrix(matrix(c(-1, -2, 1, 1), 2,2)))
b <- makeCacheMatrix(matrix(c(0,0,0,0),2,2))
cacheSolve(b)
a <- makeCacheMatrix(matrix(c(-1, -2, 1, 1), 2,2))
tracemem(a)
tracemem(matrix(c(-1, -2, 1, 1), 2,2))
a$setMatrix(1:5)
cacheSolve(a)
cacheSolve(a)
